{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","C_Users_Daniel_WebstormProjects_javascript_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Daniel_WebstormProjects_javascript_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Daniel_WebstormProjects_javascript_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","cadena","resultado","fin","botones","texto","accion","addNumero","operacion","clase","igual","limpiar","bind","C_Users_Daniel_WebstormProjects_javascript_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","event","setState","target","value","cadenaReemplazo","slice","length","test","concat","regex","nuevaCadena","resultadoFinal","eval","cadenaFinal","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","className","id","map","b","Boton","key","Component","_this3","onClick"],"mappings":"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","file":"static/js/main.cdfd0949.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* eslint no-eval: 0 */\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      cadena: '0', // Muestra todas las operaciones\n      resultado: '0', // Muestra el valor actual y el resultado final\n      fin: false, // Indica si ya se ha realizado una operación completa(true) o aún esta en proceso(false)\n      botones: [\n        {texto:\"7\", accion: this.addNumero},\n        {texto:\"8\", accion: this.addNumero},\n        {texto:\"9\", accion: this.addNumero},\n        {texto:\"*\", accion: this.operacion, clase: \"botonOperacion\"},\n        {texto:\"4\", accion: this.addNumero},\n        {texto:\"5\", accion: this.addNumero},\n        {texto:\"6\", accion: this.addNumero},\n        {texto:\"-\", accion: this.operacion, clase: \"botonOperacion\"},\n        {texto:\"1\", accion: this.addNumero},\n        {texto:\"2\", accion: this.addNumero},\n        {texto:\"3\", accion: this.addNumero},\n        {texto:\"+\", accion: this.operacion, clase: \"botonOperacion\"},\n        {texto:\"/\", accion: this.operacion, clase: \"botonOperacion\"},\n        {texto:\"0\", accion: this.addNumero},\n        {texto:\".\", accion: this.operacion, clase: \"botonOperacion\"},\n        {texto:\"=\", accion: this.igual, clase: \"botonIgual\"},\n        {texto:\"AC\", accion: this.limpiar, clase: \"botonLimpiar\"}\n      ]\n    };\n\n    this.addNumero = this.addNumero.bind(this);\n    this.operacion = this.operacion.bind(this);\n    this.igual = this.igual.bind(this);\n    this.limpiar = this.limpiar.bind(this);\n  }\n\n  addNumero(event){\n    let regex = /\\d/;\n\n    if (this.state.fin){\n      this.limpiar();\n      this.setState({\n        cadena: event.target.value,\n        resultado: event.target.value\n      });\n    } else {\n      if (this.state.resultado === '0' && this.state.cadena === \"0\"){\n        this.setState({\n          cadena: event.target.value,\n          resultado: event.target.value\n        });\n      } else if (this.state.resultado === '0' && this.state.cadena !== \"0\"){\n        if(event.target.value !== '0'){\n          let cadenaReemplazo = this.state.cadena.slice(0, this.state.cadena.length - 1);\n          cadenaReemplazo += event.target.value;\n\n          this.setState({\n            cadena: cadenaReemplazo,\n            resultado: event.target.value\n          });\n        }\n      } else {\n        if(!regex.test(this.state.resultado)){\n          this.setState({\n            cadena: this.state.cadena.concat(event.target.value),\n            resultado: event.target.value\n          });\n        } else {\n          this.setState({\n            cadena: this.state.cadena.concat(event.target.value),\n            resultado: this.state.resultado.concat(event.target.value)\n          });\n        }\n      }\n    }\n  }\n\n  operacion(event){\n    let regex = /\\d/; //Que la cifra a comprobar sea numérica\n    let regex2 = /^\\d$/; // Que todos los elementos de la cadena sean númericos\n\n    if (this.state.fin && event.target.value !== \".\"){\n      this.setState({\n        fin: false,\n        cadena: this.state.resultado + event.target.value,\n        resultado: event.target.value\n      });\n    } else {\n      if(regex.test(this.state.cadena[this.state.cadena.length - 1]) && event.target.value !== '.'){ // Operador\n        this.setState({\n          cadena: this.state.cadena.concat(event.target.value),\n          resultado: event.target.value\n        });\n      } else if (event.target.value === '.' && regex.test(this.state.cadena[this.state.cadena.length - 1]) && regex2.test(this.state.resultado)){ // Decimal\n        this.setState({\n          cadena: this.state.cadena.concat(event.target.value),\n          resultado: this.state.resultado.concat(event.target.value)\n        });\n      } else if (event.target.value !== '.' && !regex.test(this.state.cadena[this.state.cadena.length - 1])){ //Cambio último operador\n        let nuevaCadena =  this.state.cadena.slice(0, this.state.cadena.length - 1);\n        nuevaCadena += event.target.value;\n\n        this.setState({\n          cadena: nuevaCadena,\n          resultado: event.target.value\n        });\n      }\n    }\n  }\n\n  igual(){\n    if (!this.state.fin){\n      let resultadoFinal = eval(this.state.cadena);\n      let cadenaFinal = this.state.cadena + \"=\" + resultadoFinal;\n      this.setState({\n        cadena: cadenaFinal,\n        resultado: resultadoFinal,\n        fin: true\n      });\n    }\n  }\n\n  limpiar(){\n    this.setState({\n      cadena: '0',\n      resultado: '0',\n      fin: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"calculadora\">\n          <div id=\"display\">\n            <p id=\"cadena\">{this.state.cadena}</p>\n            <span id=\"resultado\">{this.state.resultado}</span>\n          </div>\n          <div id=\"botones\">\n            {\n                this.state.botones.map(b => <Boton key={b.texto} clase={b.clase} texto={b.texto} accion={b.accion.bind(this)}/>)\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Boton extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      texto: props.texto,\n      accion: props.accion,\n      clase: props.clase\n    }\n  }\n  render(){\n    return (\n        <button onClick={this.state.accion} className={this.state.clase} value={this.state.texto}>{this.state.texto}</button>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}